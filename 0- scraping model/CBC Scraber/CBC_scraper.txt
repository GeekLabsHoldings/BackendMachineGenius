const puppeteer = require('puppeteer')

const getURLs = async () => {
  const browser = await puppeteer.launch({
    headless: false,
    defaultViewport: null,
  });

  // Open a new page
  const page = await browser.newPage();

  await page.goto("https://www.cbc.ca/news/politics", {
    waitUntil: "domcontentloaded",
  });

  const URLs = await page.evaluate(() => {
  const ScrapeList = document.querySelectorAll(".contentListCards a");

  
  return Array.from(ScrapeList).map((Scrape) => {
    // Fetch the sub-elements from the previously fetched element
    // Get the displayed text and return it (`.innerText`)
    const text = Scrape.innerText;
    let href = Scrape.getAttribute("href");
    href = `https://www.cbc.ca/news/politics/${href}`
    
    return { text , href };
    });
  });

  // Display the URLs
  console.log(URLs);

  // Close the browser
  await browser.close();
};

// Start the scraping
getURLs();